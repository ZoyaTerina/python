# ZeroDivisionError: division by zero - –æ—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å
#x = 5/0

#TypeError: can only concatenate str (not "int") to str - –Ω–µ–ª—å–∑—è –ø–ª—é—Å–æ–≤–∞—Ç—å —Å—Ç—Ä–æ—á–∫–∏ –∏ —Ü–∏—Ñ—Ä—ã
#x = "–∞" + 15

#IndexError: list index out of range - —Ç—ã –≤—ã—à–µ–ª –∑–∞ –ø—Ä–∏–¥–µ–ª—ã —Å–ø–∏—Å–∫–∞
#x = [0, -15, "–ê–Ω—Ç–æ–Ω"]
#x[3]
#SyntaxError: unterminated string literal - –Ω–µ –∑–∞–∫—Ä—ã—Ç–∞ –∫–∞–≤—ã—á–∫–∞
#x = "–ü—Ä–∏–≤–µ—Ç, —è –ê–Ω—Ç–æ–Ω.
#SyntaxError: expected ':' - –∑–∞–±—ã—Ç–æ –¥–≤–æ–∏—Ç–æ—á–∏–µ
#if 5 == 4
#    print()
#
# NameError: name 'x2' is not defined
# x = "–Ø —Å—Ç—Ä–æ—á–∫–∞"
# print(x2)

# assert --> AssertionError
# def summa(numbers):
#     return sum(numbers)
#
# print(summa([3,4]))
#
# assert summa([1,2]) == 3
# assert summa([1,2]) == 4


# try - –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è
# except - –æ—Ç–ª–∞–≤–ª–∏–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
# else - –∏–Ω–∞—á–µ, –µ—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ –±—ã–ª–æ (–µ—Å–ª–∏ –≤—Å—ë —Ö–æ—Ä–æ—à–æ)
# finally  -  –∑–∞–∫–æ–Ω—á–∏—Ç—å
# try:
#     number = int(input())
#     x = 5 / number
# except ZeroDivisionError:
#     print("–°–ª—ã—à—å —Ç—ã, –Ω–µ–ª—å–∑—è –Ω–∞ –Ω—É–ª—å –¥–µ–ª–∏—Ç—åüòà")
# except ValueError:
#     print("–•–æ—á—É —Ü–∏—Ñ–∏—Ä–∫–∏")
# except Exception:    # –ª—é–±–∞—è –æ—à–∏–±–∫–∞ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
#     print("–ë–ª–∏–Ω, —Ç—ã –æ–±—à–∏–±–∏–±—Å—è, –ø–æ–ª—É—á–∞–µ—Ç—Å—è")
# else:   # else - –∫–æ–≥–¥–∞ –≤—Å—ë —Ö–æ—Ä–æ—à–æü§ó
#     print("–Ø –ø–æ–¥–µ–ª–∏–≤ üëâüëà")
# finally:
#     print("–ú–µ–Ω—è –Ω–∞–ø–∏—Å–∞–ª –ê–Ω—Ç–æ–Ω. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.")
# print("–Ø –∑–∞–∫–æ–Ω—á–∏–ª —Ä–∞–±–æ—Ç–∞—Ç—å.")




# PASS
# try:
#     number = int(input())
#     x = 5 / number
# except Exception:
#     pass  # pass - —ç—Ç–æ –∑–∞—Ç—ã—á–∫–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç.


# if 5 == 5:
#     pass    # TODO: –∫—É–ø–∏—Ç—å –º–æ–ª–æ–∫–æ –∏ –¥–æ–ø–∏—Å–∞—Ç—å –∫–æ–¥
#

try:
    x = input("–í–≤–µ–¥–∏ –∏–º—è: ")
    if x == "–ê–Ω—Ç–æ–Ω":
        raise Exception ("–ê–Ω—Ç–æ–Ω–∞ –≤ –æ–±–∏–¥—É –Ω–µ –¥–∞–º")
        # raise - –≤—ã–∑–≤–∞—Ç—å –∏—Å–∫—É–ª—é—á–µ–Ω–∏–µ –∏–ª–∏ –æ—à–∏–±–∫—É
except Exception as error_massage:
    # as - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—à–∏–±–∫—É –≤ error_massage
    print("–≠—Ç–æ —Å–ª–æ–≤–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ!")



























































